document.addEventListener("DOMContentLoaded", () => {
    // Verifica se o usuário está na página inicial (exemplo: "/")
    const isHomePage = window.location.pathname === "/";

    if (!document.getElementById("popupContainer")) {
        const popupHTML = `
            <div id="popupContainer" class="popup-container ${isHomePage ? 'level-2' : 'level-1'}">
                <div id="atendimentoText" class="atendimento-text">Precisa de ajuda?</div>
                <div class="popup-btns-wrapper">
                    <a href="https://www.instagram.com/barretosportwear/" target="_blank" class="popup-btn">
                        <img src="https://i.imgur.com/3kNvmkd.png" alt="Instagram" class="social-img" />
                    </a>
                    <a href="https://wa.me/5588996129495?text=Ol%C3%A1%21%20Estou%20com%20d%C3%BAvidas."
                        target="_blank" class="popup-btn">
                        <img src="https://i.imgur.com/wkfeZwD.png" alt="WhatsApp" class="social-img" />
                    </a>
                </div>
            </div>
        `;
        document.body.insertAdjacentHTML("beforeend", popupHTML);

        if (!document.getElementById("popupStyles")) {
            const style = document.createElement('style');
            style.id = 'popupStyles';
            style.innerHTML = `
                /* Estilos básicos */
                .popup-container {
                    position: fixed;
                    bottom: 30px; /* Garantindo reposicionamento */
                    right: 10px;
                    width: 250px;
                    padding: 15px;
                    background-color: rgba(255, 255, 255, 0.010);
                    backdrop-filter: blur(8px);
                    border-radius: 12px;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    transition: transform 0.4s ease, opacity 0.4s ease;
                    z-index: 1; /* Inicialmente abaixo do mobile menu e mini cart */
                    opacity: 0;
                    transform: translateY(100%);
                }

                .popup-container.level-2 {
                    opacity: 1;
                    transform: translateY(0); /* Visível no level-2 */
                }

                .popup-container.level-1 {
                    opacity: 1;
                    transform: translateY(70%); /* Minimizado no level-1 */
                }

                /* Novo level-3 para mover o popup fora da tela */
                .popup-container.level-3 {
                    transform: translateY(150%); /* Move o popup para fora da tela */
                    opacity: 0;
                }

                .atendimento-text {
                    font-size: 21px;
                    font-weight: bold;
                    text-align: center;
                    margin-bottom: 10px;
                    cursor: pointer;
                }

                .popup-btns-wrapper {
                    display: flex;
                    justify-content: center;
                    gap: 20px;
                    align-items: center;
                    opacity: 0;
                    transform: scale(0.9);
                    transition: opacity 0.2s ease-in-out, transform 0.2s ease;
                }

                .popup-btn {
                    display: inline-block;
                    width: 80px;
                    height: 80px;
                    border-radius: 16%;
                    overflow: hidden;
                    transition: transform 0.2s ease;
                }

                .social-img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                }

                /* Quando visível, o texto e ícones ficam no level-2 */
                .level-2 .atendimento-text {
                    font-size: 18px;
                    margin-bottom: 0;
                    padding: 5px 0;
                }

                .level-2 .popup-btns-wrapper {
                    opacity: 1;
                    transform: scale(1);
                    transition: opacity 0.3s ease-in-out, transform 0.3s ease;
                }

                .popup-btn:hover {
                    transform: scale(1.1);
                }

                /* Responsividade para telas pequenas */
                @media (max-width: 600px) {
                    .popup-container {
                        width: 230px;
                        padding: 5px;
                    }

                    .atendimento-text {
                        font-size: 20px;
                        margin-bottom: 5px;
                    }

                    .popup-btn-wrapper {
                        gap: 15px;
                    }

                    .popup-btn {
                        width: 60px;
                        height: 60px;
                    }
                }

                /* Responsividade para telas muito pequenas */
                @media (max-width: 375px) {
                    .popup-container {
                        width: 180px;
                    }

                    .atendimento-text {
                        font-size: 16px;
                    }

                    .popup-btn {
                        width: 50px;
                        height: 50px;
                    }
                }
            `;
            document.head.appendChild(style);
        }

        const atendimentoText = document.getElementById("atendimentoText");
        const popupContainer = document.getElementById("popupContainer");

        // Função para alternar entre level-1 e level-2
        const changePopupLevel = () => {
            if (popupContainer.classList.contains("level-1")) {
                popupContainer.classList.remove("level-1");
                popupContainer.classList.add("level-2");
            } else if (popupContainer.classList.contains("level-2")) {
                popupContainer.classList.remove("level-2");
                popupContainer.classList.add("level-1");
            }
        };

        // Ao clicar no texto, alterna entre level-1 e level-2
        atendimentoText.addEventListener("click", changePopupLevel);

        // Função para voltar ao level-1 após 6 segundos de inatividade
        let inactivityTimer;
        const resetInactivityTimer = () => {
            // Limpar o timer anterior
            clearTimeout(inactivityTimer);
            // Iniciar novo timer
            inactivityTimer = setTimeout(() => {
                if (popupContainer.classList.contains("level-2")) {
                    popupContainer.classList.remove("level-2");
                    popupContainer.classList.add("level-1");
                }
            }, 3500); // 3.5 segundos de inatividade
        };

        // Resetar o timer a cada interação
        window.addEventListener("click", resetInactivityTimer);

        // Inicializa o timer assim que o popup for exibido
        resetInactivityTimer();
    }

    // Função para ajustar o z-index e esconder o popup abaixo dos outros elementos
    const adjustPopupPosition = () => {
        const drawer = document.getElementById("mobile-menu-drawer");
        const miniCart = document.getElementById("mini-cart");

        const popupContainer = document.getElementById("popupContainer");

        if (drawer && miniCart && popupContainer) {
            const drawerIsOpen = drawer.classList.contains("open");  // Ajuste conforme a lógica de abertura do seu menu
            const miniCartIsOpen = miniCart.classList.contains("open");  // Ajuste conforme a lógica do mini cart

            if (drawerIsOpen || miniCartIsOpen) {
                // Se algum dos elementos estiver aberto, movemos o popup para um z-index baixo
                popupContainer.style.zIndex = 0; // Isso vai manter o popup abaixo dos outros elementos
            } else {
                // Se ambos estiverem fechados, o popup fica acima
                popupContainer.style.zIndex = 1;  // Ou o valor de z-index que você quiser para o popup
            }
        }
    };

    // Chama a função sempre que o estado do menu ou mini cart mudar
    adjustPopupPosition();

    // Se o estado do menu ou mini cart for alterado, re-ajuste o popup
    document.getElementById("mobile-menu-drawer")?.addEventListener("transitionend", adjustPopupPosition);
    document.getElementById("mini-cart")?.addEventListener("transitionend", adjustPopupPosition);
});
